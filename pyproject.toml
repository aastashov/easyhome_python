[tool.poetry]
name = "easyhome"
version = "0.1.0"
description = ""
authors = ["Alexander Astashov <alexander.astashov.vl@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.2"
django = "^5.0.0"
django-stubs = "*"
django-environ = "*"
sentry-sdk = "*"
django-recaptcha = "*"
psycopg2-binary = "*"
bs4 = "*"
aiohttp = "*"
pytest-django = "*"
aiohttp-retry = "*"
requests = "*"
dependency-injector = "*"
APScheduler = "*"
elastic-apm = "*"

[tool.poetry.group.qa.dependencies]
coverage = "7.0.1"
pytest = "*"
pytest-django = "*"
pytest-freezegun = "*"
factory-boy = "*"
django-coverage-plugin = "*"
pytest-cov = "*"
ruff = "*"
basedmypy = "*"
types-requests = "*"
types-beautifulsoup4 = "*"

[tool.poetry.group.local.dependencies]
ipython = "*"
django-debug-toolbar = "*"
django-extensions = "*"

[tool.poetry.group.prod.dependencies]
gunicorn = "*"

[tool.coverage.run]
branch = true
plugins = [
    "django_coverage_plugin",
]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/config/*",
    "*/typing.py",
]

[tool.coverage.report]
skip_empty = true
skip_covered = true
exclude_lines = [
    "raise NotImplementedError",
    "if TYPE_CHECKING",
    "pragma: no cover",
]

[tool.coverage.django_coverage_plugin]
template_extensions = 'html'

[tool.ruff]
line-length = 120

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".cache",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".idea",
    "**/__pycache__/**",
    "**/migrations/**",
    "htmlcov",
]

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "D203", # `one-blank-line-before-class`
    "D212", # `multi-line-summary-first-line`
    "ANN101", # Missing type annotation for `self` in method
    "ARG002", # Unused method argument
    "RUF001", # ambiguous-unicode-character-string (to fix this, we need to write the code in English and add RU language)
]

[tool.ruff.lint.isort]
case-sensitive = true
order-by-type = false
required-imports = ["from __future__ import annotations"]


[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of `assert` detected
    "D", # pydocstyle - we disable all pydocstyle rules for the tests directory
    "SLF001", # Private member accessed: `_meta`
]

[tool.mypy]
no_implicit_optional = true
ignore_missing_imports = true
disallow_any_explicit = false
follow_imports = "normal"
baseline_file = "./baselines/mypy.json"
implicit_reexport = true
exclude = [
    "\\.git",
    "\\.cache",
    "\\.mypy_cache",
    "\\.pytest_cache",
    "\\.idea",
    "__pycache__\\/",
    "migrations\\/",
    "htmlcov",
    "tests",
]
plugins = ["mypy_django_plugin.main"]

# Basically all of this is caused by untyped third-party packages. There is nothing we can do about it ¯\_(ツ)_/¯.
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_unimported = false
disallow_untyped_calls = false
disallow_subclassing_any = false
disallow_untyped_decorators = false

[tool.django-stubs]
django_settings_module = "config.settings.local"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.local"
addopts = "--cov-fail-under=10"
filterwarnings = [
    "error",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
